#!/usr/bin/env python3
"""
Mermaid Processor using pure HTML + Mermaid.js
‡πÉ‡∏ä‡πâ Mermaid.js library ‡πÉ‡∏ô HTML ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ API ‡∏´‡∏£‡∏∑‡∏≠ mermaid-py
"""

import re
import tempfile
from pathlib import Path

class MermaidProcessorPy:
    """Mermaid processor ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ Mermaid.js ‡πÉ‡∏ô HTML ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á"""
    
    def __init__(self):
        self.temp_dir = Path(tempfile.mkdtemp())
        print(f"MermaidProcessorPy (HTML) initialized. Temp directory: {self.temp_dir}")
        
    def replace_mermaid_with_images(self, content: str) -> str:
        """‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà Mermaid diagrams ‡∏î‡πâ‡∏ß‡∏¢ interactive HTML"""
        mermaid_pattern = r'```mermaid\n(.*?)\n```'
        
        def replace_mermaid(match):
            diagram_content = match.group(1)
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á interactive HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Mermaid diagram
            html_content = f"""
<div class="mermaid-diagram">
    <h4>üìä Mermaid Diagram</h4>
    <div class="mermaid-container">
        <div class="mermaid">
{diagram_content}
        </div>
    </div>
    <div class="mermaid-alternatives">
        <p><strong>üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ú‡∏ô‡∏†‡∏≤‡∏û:</strong></p>
        <ol>
            <li><strong>‡πÉ‡∏ä‡πâ Mermaid Live Editor:</strong> <a href="https://mermaid.live" target="_blank">https://mermaid.live</a></li>
            <li><strong>‡πÉ‡∏ä‡πâ VS Code:</strong> ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Mermaid Preview extension</li>
            <li><strong>‡πÉ‡∏ä‡πâ GitHub:</strong> GitHub ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á Mermaid diagrams ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</li>
            <li><strong>‡πÉ‡∏ä‡πâ Mermaid CLI:</strong> ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á mermaid-cli ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</li>
        </ol>
        <details>
            <summary>üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î Mermaid</summary>
            <textarea readonly style="width: 100%; height: 100px;">{diagram_content}</textarea>
        </details>
    </div>
</div>
"""
            return html_content
        
        content = re.sub(mermaid_pattern, replace_mermaid, content, flags=re.DOTALL)
        return content
    
    def cleanup(self):
        """‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß"""
        try:
            import shutil
            if self.temp_dir.exists():
                shutil.rmtree(self.temp_dir)
                print(f"Cleaned up temp directory: {self.temp_dir}")
        except Exception as e:
            print(f"Error cleaning up temp directory: {e}")
    
    def create_mermaid_fallback(self, diagram_content: str) -> str:
        """‡∏™‡∏£‡πâ‡∏≤‡∏á fallback HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Mermaid diagram"""
        return f"""
<div class="mermaid-diagram">
    <h4>üìä Mermaid Diagram</h4>
    <div class="mermaid-container">
        <div class="mermaid">
{diagram_content}
        </div>
    </div>
    <div class="mermaid-alternatives">
        <p><strong>üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ú‡∏ô‡∏†‡∏≤‡∏û:</strong></p>
        <ol>
            <li><strong>‡πÉ‡∏ä‡πâ Mermaid Live Editor:</strong> <a href="https://mermaid.live" target="_blank">https://mermaid.live</a></li>
            <li><strong>‡πÉ‡∏ä‡πâ VS Code:</strong> ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Mermaid Preview extension</li>
            <li><strong>‡πÉ‡∏ä‡πâ GitHub:</strong> GitHub ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á Mermaid diagrams ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</li>
            <li><strong>‡πÉ‡∏ä‡πâ Mermaid CLI:</strong> ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á mermaid-cli ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</li>
        </ol>
        <details>
            <summary>üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î Mermaid</summary>
            <textarea readonly style="width: 100%; height: 100px;">{diagram_content}</textarea>
        </details>
    </div>
</div>
"""
